#!/usr/local/opt/python/bin/python2.7

from __future__ import print_function
from twitter import Twitter, OAuth
from argparse import ArgumentParser
from sys import exit
import envoy

# twitter-api-key
cs = "API-key"
csk = "API-secret"
# twitter-tokens
t = "Access Token"
ts = "Access Token secret"


class Tgit(object):

    def __init__(self):
        self.twitter = Twitter(auth=OAuth(t, ts, cs, csk))

    def post(self, msg):
        """Accept a message to  tweet

        Arguments
        ---------
            msg (str) - twitter message
        """
        self.twitter.statuses.update(status=msg)

    def commit(self, msg):
        """Accept a message to commit and tweet

        Arguments
        ---------
            msg (str) - commit and twitter message
        """

        msg = msg
        c = envoy.run("git commit -m \"{msg}\"".format(msg=msg))
        print(c.std_out)

        self.post(msg)
        print("Updated Twitter : {msg}".format(msg=msg))

    def search(self, search_terms=None):
        """Accept a message to search

        Arguments
        ---------
           search_terms (str) - search terms
        """
        search = " ".join(search_terms)
        search_results = self.twitter.search.tweets(q=search)
        search_results = search_results['statuses']
        print("Searching Twitter for {srh}".format(srh=search))
        for r in search_results[0:10]:
            print(r['user']['name'], ":\n", r['text'], "\n")


def gen_parser():
    desc = """Wanna tweet out some of your sick ass mother fucking bugfixes?\
              Now you can!"""

    parser = ArgumentParser(description=desc)
    subparser = parser.add_subparsers(help="sub-commands")

    # add a commit subparser
    c = subparser.add_parser('commit', help="commit and tweet")
    c.add_argument('-m', '--message', type=str,
                   help="commit message")

    # add a twitter subparser
    t = subparser.add_parser('twitter', help="search for things!")
    t.add_argument('-s', '--search', nargs='+', type=str,
                   help="string search", dest="search")
    t.add_argument('-n', type=int,
                   help="number of tweets")
    return parser


def main():
    parser = gen_parser()
    args = parser.parse_args()
    tgit = Tgit()

    if hasattr(args, "message"):
        tgit.commit(args.message)

    if not hasattr(args, "n"):
        args.n = 5

    if hasattr(args, "search"):
        tgit.search(text=args.search, n=args.n)

if __name__ == "__main__":
    exit(main())
